on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  AWS_REGION: us-west-2

jobs:
  build-n-publish-package:
    name: Build and publish Python 🐍 distributions 📦 to internal pypi-server
    runs-on: [self-hosted, linux, x64, ubuntu]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user

      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .

      - name: Publish distribution 📦 to Internal PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          repository_url: https://pypi.0xgl.xyz/
          user: grandline
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Announce
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: '[{{ EVENT_PAYLOAD.repository.full_name }} ${{ github.ref_name}}](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}) has been published.'

  build-and-push-image:
    runs-on: [self-hosted, linux, x64, ubuntu]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login in Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: Create repository in ECR if not exists
        uses: int128/create-ecr-repository-action@v1
        id: ecr
        with:
          repository: "lain"

      - name: Build
        run: >
          docker build .
          -t ${{ steps.ecr.outputs.repository-uri }}
          --build-arg BASE=${{ steps.login-ecr.outputs.registry }}/python:3.10

      - name: Calculate tag name
        if: github.event_name == 'push' && github.ref_type == 'tag'
        id: tag
        run: echo ::set-output name=tag::${GITHUB_REF_NAME:1}

      - name: Tag
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: >
          docker tag
          ${{ steps.ecr.outputs.repository-uri }}
          ${{ steps.ecr.outputs.repository-uri }}:${{ steps.tag.outputs.tag }}

      - name: Push
        run: docker push ${{ steps.ecr.outputs.repository-uri }}

      - name: Push with tag
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: docker push ${{ steps.ecr.outputs.repository-uri }}:${{ steps.tag.outputs.tag }}
